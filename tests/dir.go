// Generated by embed. DO NOT EDIT.

package tests

import (
	"bytes"
	"encoding/base64"
	"errors"
	"io"
	"net/http"
	"os"
	"path"
	"sync"
	"time"

	"github.com/golang/snappy"
)

type (
	file struct {
		path    string
		size    int64
		mode    os.FileMode
		modTime time.Time
		isDir   bool
		files   []string
		content string

		once    sync.Once
		decoded []byte
	}

	fs struct {
		m     map[string]*file
		index bool
	}

	fsfile struct {
		r bytes.Reader
		*file
		fs
		d int
	}
)

var timeFormat = "2006-01-02 15:04:05.999999999 -0700 MST"

var (
	ErrClosed     = errors.New("closed file")
	ErrOutOfRange = errors.New("out of range")
)

func FS(index bool) http.FileSystem {
	return fs{
		m:     m,
		index: index,
	}
}

func (fs fs) Open(p string) (_ http.File, err error) {
	if len(p) != 0 && p[0] == '/' {
		p = p[1:]
	}
	if p == "" {
		p = "."
	}
	f, ok := fs.m[p]
	if !ok {
		return nil, os.ErrNotExist
	}

	f.once.Do(func() {
		if f.content == "" {
			return
		}

		var z []byte
		z, err = base64.StdEncoding.DecodeString(f.content)
		if err != nil {
			return
		}

		f.decoded, err = snappy.Decode(nil, z)
	})
	if err != nil {
		return
	}

	ff := &fsfile{file: f, fs: fs}
	ff.r.Reset(f.decoded)

	return ff, nil
}

func (f *fsfile) Close() error { f.d = -1; return nil }

func (f *fsfile) Seek(off int64, whence int) (int64, error) {
	if f.d == -1 {
		return 0, ErrClosed
	}
	return f.r.Seek(off, whence)
}

func (f *fsfile) Read(p []byte) (n int, err error) {
	if f.d == -1 {
		return 0, ErrClosed
	}
	return f.r.Read(p)
}

func (f *fsfile) ReadAt(p []byte, off int64) (n int, err error) {
	if f.d == -1 {
		return 0, ErrClosed
	}
	return f.r.ReadAt(p, off)
}

func (f *fsfile) Stat() (os.FileInfo, error) {
	return f.file, nil
}

func (f *fsfile) Readdir(n int) ([]os.FileInfo, error) {
	if !f.fs.index {
		return nil, nil
	}

	var res []os.FileInfo
	for f.d < len(f.files) && len(res) < n {
		res = append(res, m[path.Join(f.path, f.files[f.d])])
		f.d++
	}

	if f.d == len(f.files) {
		return res, io.EOF
	}

	return res, nil
}

func (f *file) Name() string       { return path.Base(f.path) }
func (f *file) Size() int64        { return f.size }
func (f *file) Mode() os.FileMode  { return f.mode }
func (f *file) ModTime() time.Time { return f.modTime }
func (f *file) IsDir() bool        { return f.isDir }
func (f *file) Sys() interface{}   { return nil }

func must(t time.Time, err error) time.Time {
	if err != nil {
		panic(err)
	}
	return t
}

var m = map[string]*file{
	`.`: {
		path:    `.`,
		size:    4096,
		mode:    020000000775,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:37:08.663198501 +0300 MSK")),
		isDir:   true,
		files:   []string{`LICENSE`, `README.md`, `empty`, `go.mod`, `go.sum`, `main.go`, `tests`},
	},
	`LICENSE`: {
		path:    `LICENSE`,
		size:    1073,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:17:16.439089755 +0300 MSK")),
		content: `sQjw101JVCBMaWNlbnNlCgpDb3B5cmlnaHQgKGMpIDIwMTkgTmlraWZvciBTZXJ5YWtvdgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weQpvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbAppbiB0aGUgU29mdAEbeCB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcVHxRsaW1pdGEBHhAgdGhlICUCJHMKdG8gdXNlLCABqBgsIG1vZGlmAQgEZXIB1yhwdWJsaXNoLCBkaQFbGGJ1dGUsIHMBFSVLWCwgYW5kL29yIHNlbGwKY29waWVzIG9mBV8MU29mdAGeBSQhIABwIVEAdAEHDHNvbnMBEgx3aG9tMiwALCBpcwpmdXJuaXNoZQU0EGRvIHNvBXIMamVjdAE0AboUZm9sbG93AdsQY29uZGkB0jBzOgoKVGhlIGFib3ZlBcwF3xggbm90aWNlAacAICWBBYUp1g0bHHNoYWxsIGJlLTEYZWQgaW4gYR3PAHIB8SxzdGFudGlhbCBwb3IFcD7nAPB5LgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0EFSwhJRVMBTVBNRVJDSEFOVEFCSUxJVFksCkZJVE4BVPBpRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRQpBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRQlrOE5ZIENMQUlNLCBEQU1BRwGeJFIgT1RIRVIKTEkRngwgV0hFARMBcCBBTiBBQ1RJT04BxzhDT05UUkFDVCwgVE9SVCARO0xXSVNFLCBBUklTSU5HIEZST00sCiFPBE9GASMESU4BOARORQlGIWsBtjmSBE9SBRAIVVNFAQsFjCAgREVBTElOR1MBPTRUSEUKU09GVFdBUkUuCg==`,
	},
	`README.md`: {
		path:    `README.md`,
		size:    1087,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:37:08.663198501 +0300 MSK")),
		content: `vwjwSVshW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vbmlrYW5kZm9yL2VtYmVkP3N0YXR1cy5zdmcpCTqaOQAwKQpbIVtCdWlsZCBTdAFDCT4BeCR0cmF2aXMtY2kuSnEASC5zdmc/YnJhbmNoPW1hc3RlcimaOgAFchhjb2RlY292GTMNERguaW8vZ2gvOt4AAC8JaQAvCWksL2dyYXBoL2JhZGdlAYcdeXJGAAV5HEdvbGFuZ0NJGXoAZwUSDeYUYmFkZ2VzamkBOnEAMj0AAHJqOAANfSwgUmVwb3J0IENhcmQugwAAcgUXDGNhcmQlbRBiYWRnZW5OAGo8AAlLbj0ADAoKIyBFNgAKBQbwVSBmaWxlcyBvciBmb2xkZXJzIGludG8gZ28gZXhlY3V0YWJsZSBhbmQgZ2V0IGBodHRwLkZpbGVTeXN0ZW1gCgojIHVzYWdlCgpmaWxlCmBgYGJhc2gKCVscLS1wa2cgbXkBBkwtLXNyYyBteS50bXBsIC0tZHN0IAELUC5nbyAtLW5hbWUgTXlUZW1wbGF0ZQFIAQQkZ28KZGF0YSA6PR0dPFJlYWRBbGwoKQp0LCBlcnIBHgB0DTlULk5ldygiIikuUGFyc2Uoc3RyaW5nKAFEBCkpAVEECgoJ5gEMBGJhOqkAYUYEaWMNqgBiYRYQL2Rpc3QBxxByZWZpeDYUAAhkc3QNMgAvCTkJyihza2lwLWhpZGRlbgFlAQQ8Z28KYWxsb3dEaXJJbmRleAWxFHJ1ZQpmcwELDT4IRlMoMiYABCkKgQM0LkhhbmRsZSgiLyIsIGg1fjhlcnZlcihmcykpCmBgYAo=`,
	},
	`empty`: {
		path:    `empty`,
		size:    0,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:17:16.45108922 +0300 MSK")),
	},
	`go.mod`: {
		path:    `go.mod`,
		size:    216,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:17:16.45108922 +0300 MSK")),
		content: `2AHobW9kdWxlIGdpdGh1Yi5jb20vbmlrYW5kZm9yL2VtYmVkCgpnbyAxLjEzCgpyZXF1aXJlICgKCWdpdGgNMExnb2xhbmcvc25hcHB5IHYwLjAuMTIhABlRCGNsaQkheDAtMjAxOTEyMDkyMjEyMzctYWQ2Yzk3ZjVhZmFjCgkdXiRwa2cvZXJyb3JzAToAODpbAGRzdHJldGNoci90ZXN0aWZ5IHYxLjMuMAopCg==`,
	},
	`go.sum`: {
		path:    `go.sum`,
		size:    1248,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:17:16.45108922 +0300 MSK")),
		content: `4AnwWGdpdGh1Yi5jb20vZGF2ZWNnaC9nby1zcGV3IHYxLjEuMC9nby5tb2QgaDE6SjdZOFljVzJOaWhzZ21Wby9tdjNsQXdsL3NrT040aUxIalNzSStjNUgzOD0KflkAyDEgaDE6dmo5ai91MWJxbnZDRWZKT3dVaHRsT0FScXMzK3JrSFlZMTNqWVdUVTk3Yz0KZ3qrAAAx7qsADatEZ29sYW5nL3NuYXBweSB2MC4wCamwUWdyOXJLVzd1RFVrcmJTbVFlaURzR2E4U2pHeUNPR3R1YXNNV3d2cDJQND0KHftOUAAEL2c1UqgvWHhiZm1NZzhseGVmS003SVhDM2ZCTmwvN2JSY2M3MmFDUnpFV3JtUDJRMlcAMG5pa2FuZGZvci9jbGkJp3AwLTIwMTkxMjA5MjIxMjM3LWFkNmM5N2Y1YWZhYyFsqDQ5aUtLcU5ITkdBRnRKejA4U3dON3hYbjJ1ZVI0eGxWcjVZRWlUa2liMFXybAAd36hDL3QwZ2R2eHFHL0k0QUNpSWR0alhJZjcvVmVQZ3puQnZ4aFNnNlNSWjJnMnMAJHBrZy9lcnJvcnMB3AA4KYOoaVVSVXJSR3hQVU5QZHk1L0hSU20rWWo2b2tKNlV0TElOTjBROU00K2gzSXZNAB2hqGJ3YXd4ZkhCRk5WK0wyaFVwMXJIQUR1ZlYzSU10bkRSZGYxcjVOSU5FbDA2VAAUbWV6YXJkYSs0ZGlmZmxpYiB2MS4wLjAlaahEQndERTBOR3lRb0JIYkxRWVB3U1VQb0NNV1I1QkV6SWsvZjFsWmJBUU09LtUCYlUAHbGoaUtINzdrb0ZoWXhUSzFwY1Jua0trcWZUb2dzYmc3Z1pOVlk0c1JEWVovNDKxADBzdHJldGNoci9vYmp4IVUAMTLaA6hIRmtZOTE2SUYrcndkRGZNQWtWN090d3VxQlZ6ckU4R1I2R0Z4K3dFeE1FVlcAGHRlc3RpZnkhBgAzKQaoVGl2Q24vcGVCUTdVWThvb0ljUGdaRnBUTlN6MFEyVTZVckZsVWZxYmUwUY5TAD0EsE01V0l5OURoMjFJRUlmbkdDd1hHYzViWmZLTkp0ZkhtMVVWVWdabis5RUk9Cg==`,
	},
	`main.go`: {
		path:    `main.go`,
		size:    8253,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:17:16.45108922 +0300 MSK")),
		content: `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`,
	},
	`tests`: {
		path:    `tests`,
		size:    4096,
		mode:    020000000775,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:40:54.654101456 +0300 MSK")),
		isDir:   true,
		files:   []string{`dir_test.go`, `empty.go`, `empty_test.go`, `file.go`, `file_test.go`},
	},
	`tests/dir_test.go`: {
		path:    `tests/dir_test.go`,
		size:    2689,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:40:54.642101944 +0300 MSK")),
		content: `gRVwcGFja2FnZSB0ZXN0cwoKaW1wb3J0ICgKCSJpbyIFBhgvaW91dGlsAQ0Eb3MBBgErCGluZwULbGltZSIKCgkiZ2l0aHViLmNvbS9zdHJldGNoci8FKJBmeS9hc3NlcnQiCikKCmZ1bmMgVGVzdERpck9wZW4odCAqdGVzAU98LlQpIHsKCWZzMSA6PSBGUyhmYWxzZSkKCglmLCBlcnIBFgxmczEuBTcFhBRzL2Rpcl8BZhguZ28iKQoJCWkkLk5vRXJyb3IodAU4AUIAcwUKBUIYLlN0YXQoKWotAA1GEEVxdWFsAUQAIi5mACQsIHMuTmFtZSgpAVgBlyA9IGYuQ2xvc2VyVQAELy8VyAA9HccUZ28ubW9kjrwAAWfGuwANYC62AELgACRpbnQ2NCgyMTYpAScIU2l6Bd1CJwA8b3MuRmlsZU1vZGUoMDY2NAUuBQ4AKTlODFRydWUhNEEYNC5Ob3coKS5BZnRlcihzASsEVGklORkvNWQAZiHsAX8QSXNEaXIuUgAETmklhRBzLlN5cwEYFAoJZGF0YTXQSZwkLlJlYWRBbGwoZhlcCE5vRToGAj7ZARxgbW9kdWxlIF28gG5pa2FuZGZvci9lbWJlZAoKZ28gMS4xMwoKcmVxdWlyZWEaHTBQZ29sYW5nL3NuYXBweSB2MC4wLjEKLiEAGVEIY2xpCSFwMC0yMDE5MTIwOTIyMTIzNy1hZDZjOTdmNWFmYWMyPQAQcGtnL2UBxQBzAToAODpbAD5oA0wgdjEuMy4wCikKYCwgc3RyaW5nKCEsRaoIb2ZmNTQ4Zi5TZWVrKC0yMTYsIGlvBQ4YQ3VycmVudGY/AUI+AUk3GDApLCBvZmZhDQBuHWEIKGlvJZQQZXJBdCkFCgRBdAWNIFs6NDBdLCAxMKpqABA0MCwgbgFipm8DAF8JjGU1AewAMBXpDFN0YXId51WCCEVycmXGAGQFOgFuHURBXwwobmlsGbWWOABSBwEQbmlsLCA9AGJLAAB9NjAFAYUIZGlyTjMFgdosU2Vjb25kRlModHJ1QjcFrTaOaQQAOiU1miUFAFRt8ABzRrkDFdcEIi4ygAQECgkyiwIR1gA0OVw+ugMQCWlmICFtvQBMwTQELCABQwA0xTBcCXJldHVybgoJfQoKCXZhciBsaXN0IFtdaQEkCglmb3IgXywgZgHYHHJhbmdlIGZmwWgACQUoID0gYXBwZW5kKAEOCCwgZrXcBU8BZlF0EagAMsKoAAAyRqgA/pUAapUANXcUaW8uRU9GTc5aQwEAMf6bADabAC2kHENvbnRhaW5zwQkpWDGPVHsiTElDRU5TRSIsICJSRUFETUUubWQBDRBlbXB0eQEJ4c8IcyJ9YYHlNAAyBcIhvgBmUcYAL3bHAh0yADKiMwdVyRQgPT0gczIRf5kEEX0kbm90LWV4aXN0cx2GET4Ab2EIDE5vdEUBIRQoZXJyKSlaxgMETm+CyAMAZuEUAYm9uhGGHXw+LgMACtLuCABU/skDdcluIQNNITBOaWwodCwgZmYpCn0K`,
	},
	`tests/empty.go`: {
		path:    `tests/empty.go`,
		size:    202,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:10:56.888186188 +0300 MSK")),
		content: `ygHwdS8vIEdlbmVyYXRlZCBieSBlbWJlZC4gRE8gTk9UIEVESVQuCgpwYWNrYWdlIHRlc3RzCgppbXBvcnQgKAoJImJ5dGVzIgoJImlvIgopCgpmdW5jIEVtcHR5UmVhZGVyKCkgaW8uUmVhZGVyIHsKCXJldHVybiAFNwwuTmV3DSYUbmlsKQp9Pj8AHEFsbCgpIFtdAS4YIHsKCXJldAE9CG5pbAEsPHZhciBjRW1wdHkgPSBgYAo=`,
	},
	`tests/empty_test.go`: {
		path:    `tests/empty_test.go`,
		size:    231,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:17:16.45108922 +0300 MSK")),
		content: `5wHwQHBhY2thZ2UgdGVzdHMKCmltcG9ydCAoCgkiaW8iCgkidGVzdGluZyIKCgkiZ2l0aHViLmNvbS9zdHJldGNoci90ASB8ZnkvYXNzZXJ0IgopCgpmdW5jIFRlc3RFbXB0eSh0ICoNRSwuVCkgewoJZCA6PSAFHChSZWFkQWxsKCkKCQlABC5FCTMgLCBkKQoKCXIgLioABGVyASkUXywgZXJyARkEci4BQAwobmlsHUBYcXVhbCh0LCBpby5FT0YsIGVycikKfQo=`,
	},
	`tests/file.go`: {
		path:    `tests/file.go`,
		size:    700,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:10:56.684195494 +0300 MSK")),
		content: `vAXwXi8vIEdlbmVyYXRlZCBieSBlbWJlZC4gRE8gTk9UIEVESVQuCgpwYWNrYWdlIHRlc3RzCgppbXBvcnQgKAoJImJ5dGVzIgoJImVuY29kaW5nL2Jhc2U2NCIKCSJpbyIKAQboL2lvdXRpbCIKCgkiZ2l0aHViLmNvbS9nb2xhbmcvc25hcHB5IgopCgpmdW5jIFJlYWRlcigpIGlvLlIFDDwgewoJeiwgZXJyIDo9IGJhAWAULlN0ZEVuCXNMLkRlY29kZVN0cmluZyhjKQoJaWYFLhQhPSBuaWwBP0AJcGFuaWMoZXJyKQoJfQoJchVPCX8NQxgobmlsLCB6kkIAFGV0dXJuICUAEC5OZXdSBasQKHIpCn0dyRxBbGwoKSBbXQEnAYgMZGF0YRV7KRcF5QEoDUIAKap+AAFPAXDw9nZhciBjID0gYDJBSG9iVzlrZFd4bElHZHBkR2gxWWk1amIyMHZibWxyWVc1a1ptOXlMMlZ0WW1Wa0NncG5ieUF4TGpFekNncHlaWEYxYVhKbElDZ0tDV2RwZEdnTk1FeG5iMnhoYm1jdmMyNWhjSEI1SUhZd0xqQXVNVEloQUJsUkNHTnNhUWtoZURBdE1qQXhPVEV5TURreU1qRXlNemN0WVdRMll6azNaalZoWm1GakNna2RYaVJ3YTJjdlpYSnliM0p6QVRvQU9EcGJBR1J6ZEhKbGRHTm9jaTkwWlhOMGFXWjVJSFl4TGpNdU1Bb3BDZz09YAo=`,
	},
	`tests/file_test.go`: {
		path:    `tests/file_test.go`,
		size:    373,
		mode:    0664,
		modTime: must(time.Parse(timeFormat, "2019-12-28 05:17:16.45108922 +0300 MSK")),
		content: `9QJkcGFja2FnZSB0ZXN0cwoKaW1wb3J0ICgKCSIBEmxpbmciCgoJImdpdGh1Yi5jb20vc3RyZXRjaHIvBSB4ZnkvYXNzZXJ0IgopCgpmdW5jIFRlc3RGaWxlKHQgKgUkYG5nLlQpIHsKCWQgOj0gUmVhZEFsbCgpCgkJOkQuRXF1YWwodCwgYG1vZHVsZSAdboBuaWthbmRmb3IvZW1iZWQKCmdvIDEuMTMKCnJlcXVpcmUBqx0wUGdvbGFuZy9zbmFwcHkgdjAuMC4xCi4hABlRCGNsaQkhdDAtMjAxOTEyMDkyMjEyMzctYWQ2Yzk3ZjVhZmFjCi49ACRwa2cvZXJyb3JzAToAODpbAD4aAWQgdjEuMy4wCikKYCwgc3RyaW5nKGQpKQp9Cg==`,
	},
}
